{"ast":null,"code":"//import { ADD_MOVIE, DELETE_MOVIE } from '../actions/movieActions.js';\nimport { movies } from \"./../movies\";\nconst initialState = {\n  movies: movies\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    /* case DELETE_MOVIE:\n       return {\n         ...state,\n         movies: state.movies.filter(item => (action.payload !== item.id))\n       }\n     case ADD_MOVIE:\n       return {\n         ...state,\n         movies: [...state.movies, action.payload]\n       };*/\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["movies","initialState","reducer","state","arguments","length","undefined","action","type"],"sources":["/Users/derya/Desktop/Workintech-Repos/S10/fsweb-s10g3-redux-watchlist/src/reducers/moviesReducer.js"],"sourcesContent":["//import { ADD_MOVIE, DELETE_MOVIE } from '../actions/movieActions.js';\nimport { movies } from \"./../movies\";\n\nconst initialState = {\n  movies: movies,\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n   /* case DELETE_MOVIE:\n      return {\n        ...state,\n        movies: state.movies.filter(item => (action.payload !== item.id))\n      }\n    case ADD_MOVIE:\n      return {\n        ...state,\n        movies: [...state.movies, action.payload]\n      };*/\n    default:\n      return state;\n  }\n}\n\n\n\nexport default reducer;"],"mappings":"AAAA;AACA,SAASA,MAAM,QAAQ,aAAa;AAEpC,MAAMC,YAAY,GAAG;EACnBD,MAAM,EAAEA;AACV,CAAC;AAED,MAAME,OAAO,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,YAAY;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACC,IAAI;IAClB;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAID,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}